{"version":3,"sources":["Views/ReviewsView/ReviewsView.js"],"names":["ReviewsView","useState","reviews","setReviews","filmId","useParams","useEffect","a","GetReviewsByFilmId","response","status","data","results","Error","console","log","message","fetchData","length","map","review","author","content","id"],"mappings":"kNA6CeA,UAzCK,WAClB,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAWC,cAAXD,OAmBR,OAjBAE,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAE2BC,YAAmBJ,GAF9C,UAG4B,OADlBK,EAFV,QAGiBC,OAHjB,gBAIMP,EAAWM,EAASE,KAAKC,SAJ/B,4BAMY,IAAIC,MAAM,WAAaJ,EAASC,QAN5C,gEASII,QAAQC,IAAI,cAAgB,KAAMC,SATtC,kBAUW,MAVX,2DADc,uBAAC,WAAD,wBAcdC,KACC,CAACb,IAGF,8BACGF,GAAWA,EAAQgB,OAAS,EAC3B,6BACGhB,EAAQiB,KAAI,SAAAC,GAAM,OACjB,+BACE,4BAAIA,EAAOC,SACX,kCAAKD,EAAOE,aAFLF,EAAOG,SAOpB,mCACE","file":"static/js/Reviews.ae8f6575.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { GetReviewsByFilmId } from '../../Services/api';\n\nconst ReviewsView = () => {\n  const [reviews, setReviews] = useState(null);\n  const { filmId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await GetReviewsByFilmId(filmId);\n        if (response.status === 200) {\n          setReviews(response.data.results);\n        } else {\n          throw new Error('Error - ' + response.status);\n        }\n      } catch (error) {\n        console.log('rejected   ' + error.message);\n        return null;\n      }\n    }\n    fetchData();\n  }, [filmId]);\n\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p> {review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <>\n          <p>We don`t have any reviews for this movie</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ReviewsView;\n"],"sourceRoot":""}