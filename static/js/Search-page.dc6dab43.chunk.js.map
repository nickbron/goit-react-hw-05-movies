{"version":3,"sources":["Services/api.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Componets/SearchForm/SearchForm.styled.jsx","Componets/SearchForm/SearchForm.jsx","Views/SearchMoviesView/SearchMoviesView.js"],"names":["axios","defaults","baseURL","params","api_key","language","GetTrendingFilms","a","get","GetFilmByID","id","GetActorsByFilmId","GetReviewsByFilmId","page","SearchFilmByName","query","include_adult","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Header","Form","SearchButton","SearchButtonLabel","Input","SearchForm","onSearch","onSubmit","e","preventDefault","elements","filmName","trim","toast","error","autoComplete","type","name","autoFocus","placeholder","SearchMoviesView","useState","setfilmName","movies","setMovies","url","useRouteMatch","location","useLocation","history","useHistory","useEffect","response","status","data","results","Error","console","log","message","fetchData","lastValueInput","URLSearchParams","search","movieName","map","movie","to","pathname","state","from","label","title"],"mappings":"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","file":"static/js/Search-page.dc6dab43.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_KEY = '12355de9ae36d576f407c0d316008e50';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = { api_key: API_KEY, language: 'en-US' };\n\nexport const GetTrendingFilms = async () => {\n  return await axios.get(`/trending/movie/day`);\n};\n\nexport const GetFilmByID = async id => {\n  return await axios.get(`/movie/${id}`);\n};\n\nexport const GetActorsByFilmId = async id => {\n  return await axios.get(`/movie/${id}/credits`);\n};\n\nexport const GetReviewsByFilmId = async id => {\n  return await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const SearchFilmByName = async query => {\n  return await axios.get(`/search/movie`, {\n    params: {\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import styled from '@emotion/styled/macro';\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  /* width: 100%; */\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SearchButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n  Header,\r\n  Form,\r\n  SearchButton,\r\n  SearchButtonLabel,\r\n  Input,\r\n} from './SearchForm.styled';\r\n\r\nconst SearchForm = ({ onSearch }) => {\r\n  const handleSearch = e => {\r\n    e.preventDefault();\r\n    if (e.target.elements.filmName.value.trim() === '') {\r\n      toast.error('Для поиска введите значение');\r\n      return;\r\n    }\r\n    onSearch(e.target.elements.filmName.value);\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Form onSubmit={handleSearch} autoComplete=\"off\">\r\n        <SearchButton type=\"submit\">\r\n          <SearchButtonLabel>Search</SearchButtonLabel>\r\n        </SearchButton>\r\n\r\n        <Input\r\n          name=\"filmName\"\r\n          // className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies\"\r\n        />\r\n      </Form>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import SearchForm from 'Componets/SearchForm/SearchForm';\nimport { SearchFilmByName } from '../../Services/api';\nimport { useState, useEffect } from 'react';\nimport { Link, useRouteMatch, useHistory, useLocation } from 'react-router-dom';\n\nexport default function SearchMoviesView() {\n  const [filmName, setfilmName] = useState(null);\n  const [movies, setMovies] = useState(null);\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await SearchFilmByName(filmName);\n        if (response.status === 200) {\n          setMovies(response.data.results);\n        } else {\n          throw new Error('Error - ' + response.status);\n        }\n      } catch (error) {\n        console.log('rejected   ' + error.message);\n        return null;\n      }\n    }\n    if (filmName === null) {\n      return;\n    }\n    fetchData();\n  }, [filmName]);\n\n  const handleBarSubmit = movieName => {\n    setfilmName(movieName);\n    history.push({ ...location, search: `query=${movieName}` });\n  };\n\n  const lastValueInput = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    setfilmName(lastValueInput);\n  }, [lastValueInput]);\n\n  return (\n    <div>\n      <SearchForm onSearch={handleBarSubmit} />\n      <div>\n        {movies && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                {/* <Link to={`${url}/${movie.id}`}>{movie.title}</Link> */}\n                <Link\n                  to={{\n                    pathname: `${url}/${movie.id}`,\n                    state: {\n                      from: {\n                        location,\n                        label: 'On Search ',\n                      },\n                    },\n                  }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}