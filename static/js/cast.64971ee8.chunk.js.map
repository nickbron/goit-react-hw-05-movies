{"version":3,"sources":["Views/CastView/CastView.styled.jsx","Views/CastView/CastView.js"],"names":["List","styled","ul","Item","li","Image","img","P","p","CastView","useState","castData","setCastData","filmId","useParams","useEffect","a","GetActorsByFilmId","response","status","data","cast","Error","console","log","message","fetchData","length","map","actor","src","profile_path","alt","name","character","cast_id"],"mappings":"iOAEaA,EAAOC,IAAOC,GAAV,iJASJC,EAAOF,IAAOG,GAAV,2PAWJC,EAAQJ,IAAOK,IAAV,wFAKLC,EAAIN,IAAOO,EAAV,0F,OC0BCC,UAhDE,WACf,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACQC,EAAWC,cAAXD,OAmBR,OAjBAE,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAE2BC,YAAkBJ,GAF7C,UAG4B,OADlBK,EAFV,QAGiBC,OAHjB,gBAIMP,EAAYM,EAASE,KAAKC,MAJhC,4BAMY,IAAIC,MAAM,WAAaJ,EAASC,QAN5C,gEASII,QAAQC,IAAI,cAAgB,KAAMC,SATtC,kBAUW,MAVX,2DADc,uBAAC,WAAD,wBAcdC,KACC,CAACb,IAGF,8BACGF,GAAYA,EAASgB,OAAS,EAC7B,cAAC3B,EAAD,UACGW,EAASiB,KAAI,SAAAC,GAAK,OACjB,eAAC1B,EAAD,WACE,cAACE,EAAD,CACEyB,IAAG,yCAAoCD,EAAME,cAC7CC,IAAI,eAEN,cAACzB,EAAD,UAAIsB,EAAMI,OACV,4CACa,uBACVJ,EAAMK,eARAL,EAAMM,cAcrB,mCACE","file":"static/js/cast.64971ee8.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin-right: -50px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0px 2px 10px 3px rgba(34, 60, 80, 0.2);\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 300px;\r\n  object-fit: cover;\r\n  max-width: 100%;\r\n`;\r\nexport const P = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 800;\r\n  margin-bottom: 0;\r\n`;\r\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { GetActorsByFilmId } from '../../Services/api';\nimport { List, Item, Image, P } from '../CastView/CastView.styled';\n\nconst CastView = () => {\n  const [castData, setCastData] = useState(null);\n  const { filmId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await GetActorsByFilmId(filmId);\n        if (response.status === 200) {\n          setCastData(response.data.cast);\n        } else {\n          throw new Error('Error - ' + response.status);\n        }\n      } catch (error) {\n        console.log('rejected   ' + error.message);\n        return null;\n      }\n    }\n    fetchData();\n  }, [filmId]);\n\n  return (\n    <div>\n      {castData && castData.length > 0 ? (\n        <List>\n          {castData.map(actor => (\n            <Item key={actor.cast_id}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                alt=\"actor.name\"\n              />\n              <P>{actor.name}</P>\n              <p>\n                Character: <br />\n                {actor.character}\n              </p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <>\n          <p>We don`t have any actors for this movie</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CastView;\n"],"sourceRoot":""}